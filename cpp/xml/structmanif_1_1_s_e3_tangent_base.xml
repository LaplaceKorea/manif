<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structmanif_1_1_s_e3_tangent_base" kind="struct" language="C++" prot="public">
    <compoundname>manif::SE3TangentBase</compoundname>
    <includes refid="_s_e3_tangent__base_8h" local="no">SE3Tangent_base.h</includes>
    <templateparamlist>
      <param>
        <type>typename _Derived</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structmanif_1_1_s_e3_tangent_base_1af6e34fa055dbbd493c5f4a531e55661b" prot="private" static="no">
        <type><ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; _Derived &gt;</type>
        <definition>using manif::SE3TangentBase&lt; _Derived &gt;::Base =  TangentBase&lt;_Derived&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="23" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_s_e3_tangent_base_1a82a039580fd8a6723390b167005db8dd" prot="private" static="no">
        <type><ref refid="structmanif_1_1_s_e3_tangent_base" kindref="compound">SE3TangentBase</ref>&lt; _Derived &gt;</type>
        <definition>using manif::SE3TangentBase&lt; _Derived &gt;::Type =  SE3TangentBase&lt;_Derived&gt;</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="24" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structmanif_1_1_s_e3_tangent_base_1aaed9dbc055cd95b83d914fe04dd07498" prot="public" static="no">
        <type>typename DataType::template FixedSegmentReturnType&lt; 3 &gt;::<ref refid="structmanif_1_1_s_e3_tangent_base" kindref="compound">Type</ref></type>
        <definition>using manif::SE3TangentBase&lt; _Derived &gt;::LinBlock =  typename DataType::template FixedSegmentReturnType&lt;3&gt;::Type</definition>
        <argsstring></argsstring>
        <name>LinBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="31" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_s_e3_tangent_base_1a50b10f42bf88efd4f626cc19eec77484" prot="public" static="no">
        <type>typename DataType::template FixedSegmentReturnType&lt; 3 &gt;::<ref refid="structmanif_1_1_s_e3_tangent_base" kindref="compound">Type</ref></type>
        <definition>using manif::SE3TangentBase&lt; _Derived &gt;::AngBlock =  typename DataType::template FixedSegmentReturnType&lt;3&gt;::Type</definition>
        <argsstring></argsstring>
        <name>AngBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="32" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_s_e3_tangent_base_1a31c1837d3f82025adfe0dcc92fdcaca5" prot="public" static="no">
        <type>typename DataType::template ConstFixedSegmentReturnType&lt; 3 &gt;::<ref refid="structmanif_1_1_s_e3_tangent_base" kindref="compound">Type</ref></type>
        <definition>using manif::SE3TangentBase&lt; _Derived &gt;::ConstLinBlock =  typename DataType::template ConstFixedSegmentReturnType&lt;3&gt;::Type</definition>
        <argsstring></argsstring>
        <name>ConstLinBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="33" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_s_e3_tangent_base_1a941e8ab16fbbe31cd2af7cb3cbfe6ca7" prot="public" static="no">
        <type>typename DataType::template ConstFixedSegmentReturnType&lt; 3 &gt;::<ref refid="structmanif_1_1_s_e3_tangent_base" kindref="compound">Type</ref></type>
        <definition>using manif::SE3TangentBase&lt; _Derived &gt;::ConstAngBlock =  typename DataType::template ConstFixedSegmentReturnType&lt;3&gt;::Type</definition>
        <argsstring></argsstring>
        <name>ConstAngBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="34" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1ab31d7c85a29ec114cf74fb6cfa031a9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieAlg</type>
        <definition>SE3TangentBase&lt; _Derived &gt;::LieAlg manif::SE3TangentBase&lt; _Derived &gt;::hat</definition>
        <argsstring>() const</argsstring>
        <name>hat</name>
        <briefdescription>
<para>Hat operator of <ref refid="structmanif_1_1_s_e3" kindref="compound">SE3</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An element of the Lie algebra se3. </para>
</simplesect>
<simplesect kind="note"><para>See Eq. (169). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="56" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="168" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a505dd744283eb1749972442cc32bb9ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieGroup</type>
        <definition>SE3TangentBase&lt; _Derived &gt;::LieGroup manif::SE3TangentBase&lt; _Derived &gt;::exp</definition>
        <argsstring>(OptJacobianRef J_m_t={}) const</argsstring>
        <name>exp</name>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_m_t</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Get the <ref refid="structmanif_1_1_s_e3" kindref="compound">SE3</ref> element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_m_t Jacobian of the <ref refid="structmanif_1_1_s_e3" kindref="compound">SE3</ref> element wrt this. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="structmanif_1_1_s_e3" kindref="compound">SE3</ref> element. </para>
</simplesect>
<simplesect kind="note"><para>This is the <ref refid="structmanif_1_1_s_e3_tangent_base_1a505dd744283eb1749972442cc32bb9ac" kindref="member">exp()</ref> map with the argument in vector form. </para>
</simplesect>
<simplesect kind="note"><para>See Eq. (172) &amp; Eqs. (179,180). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="65" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="144" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1ac8fe59e9507847b69514845b9ab0fa65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>MANIF_DEPRECATED LieGroup</type>
        <definition>SE3TangentBase&lt; _Derived &gt;::LieGroup manif::SE3TangentBase&lt; _Derived &gt;::retract</definition>
        <argsstring>(OptJacobianRef J_m_t={}) const</argsstring>
        <name>retract</name>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_m_t</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>This function is deprecated. Please considere using <ref refid="structmanif_1_1_s_e3_tangent_base_1a505dd744283eb1749972442cc32bb9ac" kindref="member">exp</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="73" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a2f3e107871d67cef77d276b9349f5574" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Jacobian</type>
        <definition>SE3TangentBase&lt; _Derived &gt;::Jacobian manif::SE3TangentBase&lt; _Derived &gt;::rjac</definition>
        <argsstring>() const</argsstring>
        <name>rjac</name>
        <briefdescription>
<para>Get the right Jacobian of <ref refid="structmanif_1_1_s_e3" kindref="compound">SE3</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>See note after Eqs. (179,180).</para>
</simplesect>
<simplesect kind="note"><para>Eq. 10.95 </para>
</simplesect>
<simplesect kind="note"><para>barfoot14tro Eq. 102 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="79" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="182" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1ab3081abb257d96bb4cabed6b4f243e05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Jacobian</type>
        <definition>SE3TangentBase&lt; _Derived &gt;::Jacobian manif::SE3TangentBase&lt; _Derived &gt;::ljac</definition>
        <argsstring>() const</argsstring>
        <name>ljac</name>
        <briefdescription>
<para>Get the left Jacobian of <ref refid="structmanif_1_1_s_e3" kindref="compound">SE3</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>See Eqs. (179,180). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="85" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="196" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a9e6ed7844af1700fc042504422fdc1d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Jacobian</type>
        <definition>SE3TangentBase&lt; _Derived &gt;::Jacobian manif::SE3TangentBase&lt; _Derived &gt;::rjacinv</definition>
        <argsstring>() const</argsstring>
        <name>rjacinv</name>
        <briefdescription>
<para>Get the inverse right Jacobian of <ref refid="structmanif_1_1_s_e3" kindref="compound">SE3</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>See note after Eqs. (179,180).</para>
</simplesect>
<simplesect kind="note"><para>barfoot14tro Eq. 102 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="91" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="211" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a4d37828334564cc61d39ef30596e8407" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Jacobian</type>
        <definition>SE3TangentBase&lt; _Derived &gt;::Jacobian manif::SE3TangentBase&lt; _Derived &gt;::ljacinv</definition>
        <argsstring>() const</argsstring>
        <name>ljacinv</name>
        <briefdescription>
<para>Get the inverse left Jacobian of <ref refid="structmanif_1_1_s_e3" kindref="compound">SE3</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>See Eqs. (179,180). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="97" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="229" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a30349df92ba3ba5ded88ee323d00a117" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Jacobian</type>
        <definition>SE3TangentBase&lt; _Derived &gt;::Jacobian manif::SE3TangentBase&lt; _Derived &gt;::smallAdj</definition>
        <argsstring>() const</argsstring>
        <name>smallAdj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="103" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="297" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a28ab2f081bf90fc23a8ebcaecb700313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LinBlock</type>
        <definition>const SE3TangentBase&lt; _Derived &gt;::ConstLinBlock manif::SE3TangentBase&lt; _Derived &gt;::lin</definition>
        <argsstring>()</argsstring>
        <name>lin</name>
        <briefdescription>
<para>Get the linear part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="108" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1acae876b018ffa42449873ce15c1a4a01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const ConstLinBlock</type>
        <definition>const ConstLinBlock manif::SE3TangentBase&lt; _Derived &gt;::lin</definition>
        <argsstring>() const</argsstring>
        <name>lin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="109" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a0d7fe4f82746071aac6b1c7a28a52ce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AngBlock</type>
        <definition>const SE3TangentBase&lt; _Derived &gt;::ConstAngBlock manif::SE3TangentBase&lt; _Derived &gt;::ang</definition>
        <argsstring>()</argsstring>
        <name>ang</name>
        <briefdescription>
<para>Get the angular part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="112" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1afe06143c47c83569a461ab16971e4ec2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const ConstAngBlock</type>
        <definition>const ConstAngBlock manif::SE3TangentBase&lt; _Derived &gt;::ang</definition>
        <argsstring>() const</argsstring>
        <name>ang</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="113" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a11c0f99d7e7b4992743b5a8aa19133ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Map&lt; const <ref refid="structmanif_1_1_s_o3_tangent" kindref="compound">SO3Tangent</ref>&lt; Scalar &gt; &gt;</type>
        <definition>const Eigen::Map&lt;const SO3Tangent&lt;Scalar&gt; &gt; manif::SE3TangentBase&lt; _Derived &gt;::asSO3</definition>
        <argsstring>() const</argsstring>
        <name>asSO3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="125" column="20" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a53046daee9eadb30785805c18ecc76e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::Map&lt; <ref refid="structmanif_1_1_s_o3_tangent" kindref="compound">SO3Tangent</ref>&lt; Scalar &gt; &gt;</type>
        <definition>Eigen::Map&lt;SO3Tangent&lt;Scalar&gt; &gt; manif::SE3TangentBase&lt; _Derived &gt;::asSO3</definition>
        <argsstring>()</argsstring>
        <name>asSO3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="130" column="14" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1ae848e531a8002a31c94970f0de60bcc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar *</type>
        <definition>const TangentBase&lt; _Derived &gt;::Scalar * manif::TangentBase&lt; _Derived &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
<para>Access the underlying data by pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="36" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1aa594b4a17fe54bef228340020b963ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const Scalar *</type>
        <definition>const Scalar* manif::TangentBase&lt; _Derived &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Access the underlying data by const pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="36" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1ac340556312ac360f57d84384cef95ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DataType &amp;</type>
        <definition>const TangentBase&lt; _Derived &gt;::DataType &amp; manif::TangentBase&lt; _Derived &gt;::coeffs</definition>
        <argsstring>()</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data by reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="37" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1adf3ac7ad4ad1a6eda3e8ed0ecdb7e20e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const DataType &amp;</type>
        <definition>const DataType&amp; manif::TangentBase&lt; _Derived &gt;::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data by const reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="37" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a54119c9459837a12d20b93404197dfb7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _EigenDerived</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void manif::SE3TangentBase&lt; _Derived &gt;::fillQ</definition>
        <argsstring>(Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt; Q, const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;c)</argsstring>
        <name>fillQ</name>
        <param>
          <type>Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt;</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="138" column="15" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" bodystart="246" bodyend="292"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1a18e1a216f401f804a09047242bf987a7" prot="protected" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>_Derived &amp;</type>
        <definition>_Derived&amp; manif::TangentBase&lt; _Derived &gt;::derived</definition>
        <argsstring>() &amp;noexcept</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="41" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e3_tangent_base_1aa2305ee8102e265616aa35416179b377" prot="protected" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const _Derived &amp;</type>
        <definition>const _Derived&amp; manif::TangentBase&lt; _Derived &gt;::derived</definition>
        <argsstring>() const &amp;noexcept</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3Tangent_base.h" line="41" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="337" bodyend="337"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base class of the <ref refid="structmanif_1_1_s_e3" kindref="compound">SE3</ref> tangent. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>See Appendix D of the paper. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/runner/work/manif/manif/include/manif/impl/se3/SE3_properties.h" line="10" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se3/SE3_properties.h" bodystart="10" bodyend="-1"/>
    <listofallmembers>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a0d7fe4f82746071aac6b1c7a28a52ce7" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>ang</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1afe06143c47c83569a461ab16971e4ec2" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>ang</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a50b10f42bf88efd4f626cc19eec77484" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>AngBlock</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a11c0f99d7e7b4992743b5a8aa19133ae" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>asSO3</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a53046daee9eadb30785805c18ecc76e9" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>asSO3</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1af6e34fa055dbbd493c5f4a531e55661b" prot="private" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>Base</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1ac340556312ac360f57d84384cef95ea8" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1adf3ac7ad4ad1a6eda3e8ed0ecdb7e20e" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a941e8ab16fbbe31cd2af7cb3cbfe6ca7" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>ConstAngBlock</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a31c1837d3f82025adfe0dcc92fdcaca5" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>ConstLinBlock</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1ae848e531a8002a31c94970f0de60bcc8" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>data</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1aa594b4a17fe54bef228340020b963ce5" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>data</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a18e1a216f401f804a09047242bf987a7" prot="protected" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>derived</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1aa2305ee8102e265616aa35416179b377" prot="protected" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>derived</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a505dd744283eb1749972442cc32bb9ac" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>exp</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a54119c9459837a12d20b93404197dfb7" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>fillQ</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1ab31d7c85a29ec114cf74fb6cfa031a9b" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>hat</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a28ab2f081bf90fc23a8ebcaecb700313" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>lin</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1acae876b018ffa42449873ce15c1a4a01" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>lin</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1aaed9dbc055cd95b83d914fe04dd07498" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>LinBlock</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1ab3081abb257d96bb4cabed6b4f243e05" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>ljac</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a4d37828334564cc61d39ef30596e8407" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>ljacinv</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1ac8fe59e9507847b69514845b9ab0fa65" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>retract</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a2f3e107871d67cef77d276b9349f5574" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>rjac</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a9e6ed7844af1700fc042504422fdc1d6" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>rjacinv</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a30349df92ba3ba5ded88ee323d00a117" prot="public" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>smallAdj</name></member>
      <member refid="structmanif_1_1_s_e3_tangent_base_1a82a039580fd8a6723390b167005db8dd" prot="private" virt="non-virtual"><scope>manif::SE3TangentBase</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
