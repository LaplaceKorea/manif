<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structmanif_1_1_s_e2" kind="struct" language="C++" prot="public">
    <compoundname>manif::SE2</compoundname>
    <includes refid="impl_2se2_2_s_e2_8h" local="no">SE2.h</includes>
    <templateparamlist>
      <param>
        <type>typename _Scalar</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structmanif_1_1_s_e2_1adbb4e426a468319fae4630d12f5e1f0f" prot="private" static="no">
        <type><ref refid="structmanif_1_1_s_e2_base" kindref="compound">SE2Base</ref>&lt; <ref refid="structmanif_1_1_s_e2" kindref="compound">SE2</ref>&lt; _Scalar &gt; &gt;</type>
        <definition>using manif::SE2&lt; _Scalar &gt;::Base =  SE2Base&lt;SE2&lt;_Scalar&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="56" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_s_e2_1adc322d71463bc8a2ead57d175956af3f" prot="private" static="no">
        <type><ref refid="structmanif_1_1_s_e2" kindref="compound">SE2</ref>&lt; _Scalar &gt;</type>
        <definition>using manif::SE2&lt; _Scalar &gt;::Type =  SE2&lt;_Scalar&gt;</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="57" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structmanif_1_1_s_e2_1aa8c46370f1c02a05f47a6bd911e424d4" prot="public" static="no">
        <type>typename Base::Translation</type>
        <definition>using manif::SE2&lt; _Scalar &gt;::Translation =  typename Base::Translation</definition>
        <argsstring></argsstring>
        <name>Translation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="68" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structmanif_1_1_s_e2_1a21395a579962bee3a415129b4e6d0b4b" prot="protected" static="no" mutable="no">
        <type>DataType</type>
        <definition>DataType manif::SE2&lt; _Scalar &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
<para>Underlying data (Eigen) vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="159" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmanif_1_1_s_e2_1afcae5986c54dd55c6277f5ab4697c3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>()=default</argsstring>
        <name>SE2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="74" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a6e9ccb15a674b60c69bc27a044f8b95f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::~SE2</definition>
        <argsstring>()=default</argsstring>
        <name>~SE2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="75" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a6f6a61aeb6b8d2e022f95fed51d5fdd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const LieGroupBase&lt; _DerivedOther &gt; &amp;o)</argsstring>
        <name>SE2</name>
        <param>
          <type>const <ref refid="structmanif_1_1_lie_group_base" kindref="compound">LieGroupBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="82" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a6fb23d13048eca08a7d3d19b9ad2c774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Translation &amp;t, const std::complex&lt; Scalar &gt; &amp;c)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Translation &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const std::complex&lt; Scalar &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructor given a translation and a unit complex number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>A translation vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>A complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="structmanif_1_1invalid__argument" kindref="compound">manif::invalid_argument</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on un-normalized complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="92" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1acabbe408965e28b00b7c360362c7eca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Scalar x, const Scalar y, const Scalar theta)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Scalar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>Constructor given the x and y components of the translational part and an angle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>An angle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="101" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a85767068f5e4c85be5813d66f66d5587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Scalar x, const Scalar y, const Scalar real, const Scalar imag)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Scalar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>real</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>imag</declname>
        </param>
        <briefdescription>
<para>Constructor given the x and y components of the translational part and the real and imaginary part of a unit complex number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">real</parametername>
</parameternamelist>
<parameterdescription>
<para>The real of a unitary complex number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">imag</parametername>
</parameternamelist>
<parameterdescription>
<para>The imaginary of a unitary complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="structmanif_1_1invalid__argument" kindref="compound">manif::invalid_argument</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on un-normalized complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="112" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="189" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a256f1d4283cc9faa02c08c43fc3f7bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Scalar x, const Scalar y, const std::complex&lt; Scalar &gt; &amp;c)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Scalar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const std::complex&lt; Scalar &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructor given the x and y components of the translational part and the real and imaginary part of a unit complex number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>The unitary complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="structmanif_1_1invalid__argument" kindref="compound">manif::invalid_argument</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on un-normalized complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="122" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1abf406b849fcfb11f67bbdbf15b74c0cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Eigen::Transform&lt; _Scalar, 2, Eigen::Isometry &gt; &amp;h)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Eigen::Transform&lt; _Scalar, 2, Eigen::Isometry &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Constructor from a 2D Eigen::Isometry&lt;Scalar&gt; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>an isometry object from Eigen</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Isometry is a typedef from Eigen::Transform, in which the linear part is assumed a rotation matrix. This is used to speed up certain methods of Transform, especially inverse(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="132" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1af3c0db16481b3e58d593035c8712b6cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DataType &amp;</type>
        <definition>const SE2&lt; _Scalar &gt;::DataType &amp; manif::SE2&lt; _Scalar &gt;::coeffs</definition>
        <argsstring>()</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">a</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the underlying Eigen vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="140" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a3077cf1379ed3b3c86884e59c1834121" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const DataType &amp;</type>
        <definition>const DataType&amp; manif::SE2&lt; _Scalar &gt;::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">a</parametername>
</parameternamelist>
<parameterdescription>
<para>const reference to the underlying Eigen vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="146" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a57077d9e099ebadedb7453dfb6430ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Transformation</type>
        <definition>SE2Base&lt; _Derived &gt;::Transformation manif::SE2Base&lt; _Derived &gt;::transform</definition>
        <argsstring>() const</argsstring>
        <name>transform</name>
        <briefdescription>
<para>Get the transformation matrix (2D isometry). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>T = | R t | | 0 1 | </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="70" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2_base.h" bodystart="166" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a2a4c07bb3559cf744d7fe08d55f174e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Rotation</type>
        <definition>SE2Base&lt; _Derived &gt;::Rotation manif::SE2Base&lt; _Derived &gt;::rotation</definition>
        <argsstring>() const</argsstring>
        <name>rotation</name>
        <briefdescription>
<para>Get the rotational part of this as a rotation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="71" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2_base.h" bodystart="184" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1aaaf84b864aed1216108b0aba676f476e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void manif::SE2Base&lt; _Derived &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
<para>Normalize the underlying complex number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="72" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2_base.h" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1abe394534d27c689b8487a92a4751c9a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>SE2Base&lt; _Derived &gt;::Scalar manif::SE2Base&lt; _Derived &gt;::angle</definition>
        <argsstring>() const</argsstring>
        <name>angle</name>
        <briefdescription>
<para>Get the angle (rad.) of the rotational part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="150" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2_base.h" bodystart="369" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1aa0f3397fc51c0ec9e9216a0f61e7647b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>SE2Base&lt; _Derived &gt;::Scalar manif::SE2Base&lt; _Derived &gt;::real</definition>
        <argsstring>() const</argsstring>
        <name>real</name>
        <briefdescription>
<para>Get the real part of the underlying complex number representing the rotational part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="151" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2_base.h" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1acfd8f5c0e9560a858efb109972da3aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>SE2Base&lt; _Derived &gt;::Scalar manif::SE2Base&lt; _Derived &gt;::imag</definition>
        <argsstring>() const</argsstring>
        <name>imag</name>
        <briefdescription>
<para>Get the imaginary part of the underlying complex number representing the rotational part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="152" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2_base.h" bodystart="362" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1af519c48f07f5d8b62d3b7458a89d478c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>SE2Base&lt; _Derived &gt;::Scalar manif::SE2Base&lt; _Derived &gt;::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
<para>Get the x component of the translational part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="153" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2_base.h" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a4f4e4e060dec2ff511ef916b3320a0b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>SE2Base&lt; _Derived &gt;::Scalar manif::SE2Base&lt; _Derived &gt;::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
<para>Get the y component of the translational part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="154" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2_base.h" bodystart="384" bodyend="387"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an element of <ref refid="structmanif_1_1_s_e2" kindref="compound">SE2</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="10" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="10" bodyend="-1"/>
    <listofallmembers>
      <member refid="structmanif_1_1_s_e2_1abe394534d27c689b8487a92a4751c9a8" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>angle</name></member>
      <member refid="structmanif_1_1_s_e2_1adbb4e426a468319fae4630d12f5e1f0f" prot="private" virt="non-virtual"><scope>manif::SE2</scope><name>Base</name></member>
      <member refid="structmanif_1_1_s_e2_1af3c0db16481b3e58d593035c8712b6cc" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_e2_1a3077cf1379ed3b3c86884e59c1834121" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_e2_1a21395a579962bee3a415129b4e6d0b4b" prot="protected" virt="non-virtual"><scope>manif::SE2</scope><name>data_</name></member>
      <member refid="structmanif_1_1_s_e2_1acfd8f5c0e9560a858efb109972da3aee" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>imag</name></member>
      <member refid="structmanif_1_1_s_e2_1aaaf84b864aed1216108b0aba676f476e" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>normalize</name></member>
      <member refid="structmanif_1_1_s_e2_1aa0f3397fc51c0ec9e9216a0f61e7647b" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>real</name></member>
      <member refid="structmanif_1_1_s_e2_1a2a4c07bb3559cf744d7fe08d55f174e7" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>rotation</name></member>
      <member refid="structmanif_1_1_s_e2_1afcae5986c54dd55c6277f5ab4697c3ea" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1a6f6a61aeb6b8d2e022f95fed51d5fdd5" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1a6fb23d13048eca08a7d3d19b9ad2c774" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1acabbe408965e28b00b7c360362c7eca1" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1a85767068f5e4c85be5813d66f66d5587" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1a256f1d4283cc9faa02c08c43fc3f7bb1" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1abf406b849fcfb11f67bbdbf15b74c0cc" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1a57077d9e099ebadedb7453dfb6430ba6" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>transform</name></member>
      <member refid="structmanif_1_1_s_e2_1aa8c46370f1c02a05f47a6bd911e424d4" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Translation</name></member>
      <member refid="structmanif_1_1_s_e2_1adc322d71463bc8a2ead57d175956af3f" prot="private" virt="non-virtual"><scope>manif::SE2</scope><name>Type</name></member>
      <member refid="structmanif_1_1_s_e2_1af519c48f07f5d8b62d3b7458a89d478c" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>x</name></member>
      <member refid="structmanif_1_1_s_e2_1a4f4e4e060dec2ff511ef916b3320a0b9" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>y</name></member>
      <member refid="structmanif_1_1_s_e2_1a6e9ccb15a674b60c69bc27a044f8b95f" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>~SE2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
